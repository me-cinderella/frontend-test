[{"/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/index.js":"1","/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/App.js":"2","/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/components/Menu.js":"3","/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/components/Header.js":"4","/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/views/MarvelList.js":"5","/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/views/Ejercicio1.js":"6","/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/views/Ejercicio2.js":"7","/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/views/index.js":"8","/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/statics/initial-json.js":"9"},{"size":245,"mtime":1607941962709,"results":"10","hashOfConfig":"11"},{"size":418,"mtime":1607941950197,"results":"12","hashOfConfig":"11"},{"size":1906,"mtime":1607939971256,"results":"13","hashOfConfig":"11"},{"size":270,"mtime":1607939954240,"results":"14","hashOfConfig":"11"},{"size":2120,"mtime":1607939650606,"results":"15","hashOfConfig":"11"},{"size":2546,"mtime":1607939986163,"results":"16","hashOfConfig":"11"},{"size":3664,"mtime":1607940035662,"results":"17","hashOfConfig":"11"},{"size":152,"mtime":1607893347115,"results":"18","hashOfConfig":"11"},{"size":747,"mtime":1607912678323,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2d73ym",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/index.js",[],"/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/App.js",[],"/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/components/Menu.js",[],["40","41"],"/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/components/Header.js",[],"/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/views/MarvelList.js",[],"/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/views/Ejercicio1.js",[],"/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/views/Ejercicio2.js",["42"],"import React from 'react';\nimport { values, json } from 'statics/initial-json.js';\nimport { Row, Col, Container } from 'react-bootstrap';\n\n\nclass Ejercicio2 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newJson: {}\n        }\n\n        this.jsonTransform = this.jsonTransform.bind(this);\n    }\n\n    componentDidMount() {\n        if (values && json.data)\n            this.jsonTransform();\n    }\n\n    jsonTransform () {\n        let newJson = {...json.data};\n\n        for (var keyName in newJson) {\n            let key = newJson[keyName].over_carrier_service_id;\n            let keyValue = [values[key].carrier, values[key].service];\n            newJson[keyName].over_carrier_service_id = keyValue;\n\n            key = newJson[keyName].under_carrier_service_id;\n            keyValue = [values[key].carrier, values[key].service];\n            newJson[keyName].under_carrier_service_id = keyValue;\n        }\n\n        this.setState({ newJson });\n    }\n\n    render() {\n        return(\n            <Container>\n                <h1>Ejercicio 2</h1>\n                <Row>\n                    {values && json.data &&\n                    <Col lg={5} className=\"content mb-5\">\n                        <h3>Data original:</h3>\n                        <p>Values:</p>\n                        <ul>\n                        {Object.keys(values).map((keyName, i) => {\n                            return (\n                            <li key={i}>\n                                <p>{keyName}: </p>\n                                <p>carrier: {values[keyName].carrier}</p>\n                                <p>service: {values[keyName].service}</p>\n                            </li>\n                            )\n                        })}\n                        </ul>\n                        <p>Json:</p>\n                        <ul>\n                        {Object.keys(json.data).map((keyName, i) => {\n                            return (\n                            <li key={i}>\n                                <p>{keyName}: </p>\n                                <p>carrier: {json.data[keyName].over_carrier_service_id}</p>\n                                <p>service: {json.data[keyName].under_carrier_service_id}</p>\n                            </li>\n                            )\n                        })}\n                        </ul>\n                    </Col>\n                    }\n                    <Col lg={5} lg={{ offset: 2 }} className=\"content mb-5\">\n                    <h3>Data transformada:</h3>\n                    <ul>\n                        {Object.keys(this.state.newJson).map((keyName, i) => {\n                            return (\n                            <li key={i}>\n                                <p>{keyName}: </p>\n                                <p>over_carrier_service_id: </p>\n                                <p className=\"ml-5 mr-1\">carrier: {this.state.newJson[keyName].over_carrier_service_id[0]}</p>\n                                <p className=\"ml-5 mr-1\">service: {this.state.newJson[keyName].over_carrier_service_id[1]}</p>\n                                <p>under_carrier_service_id: </p>\n                                <p className=\"ml-5 mr-1\">carrier: {this.state.newJson[keyName].under_carrier_service_id[0]}</p>\n                                <p className=\"ml-5 mr-1\">service: {this.state.newJson[keyName].under_carrier_service_id[1]}</p>\n                            </li>\n                            )\n                        })}\n                    </ul>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Ejercicio2;","/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/views/index.js",[],"/home/lym-neptune/CodeProjects/entrevistas/frontend-test/app/src/statics/initial-json.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":72,"column":33,"nodeType":"49","endLine":72,"endColumn":51},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]